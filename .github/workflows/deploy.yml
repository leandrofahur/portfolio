name: Deploy to Vercel

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Preview Deployment (for PRs and dev branch)
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'                
          
      - name: Install dependencies
        run: npm install --frozen-lockfile        
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Deploy to Vercel (Preview)
        run: |
          vercel --token ${{ secrets.VERCEL_TOKEN }} \
                 --yes \
                 --prod=false
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  # Production Deployment (for main branch)
  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Deploy to Vercel (Production)
        run: |
          vercel --token ${{ secrets.VERCEL_TOKEN }} \
                 --yes \
                 --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          
      - name: Comment PR with deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = process.env.VERCEL_URL || 'Deployment URL not available';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Preview Deployment Ready!**\n\nVisit: ${deploymentUrl}\n\nThis is a preview deployment for your changes.`
            }); 